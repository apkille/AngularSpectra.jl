var documenterSearchIndex = {"docs":
[{"location":"references/#Suggested-reading","page":"Suggested Readings & References","title":"Suggested reading","text":"","category":"section"},{"location":"references/","page":"Suggested Readings & References","title":"Suggested Readings & References","text":"For a general overview of the vectorial angular spectrum method in optics, see (Novotny and Hecht, 2006).","category":"page"},{"location":"references/#References","page":"Suggested Readings & References","title":"References","text":"","category":"section"},{"location":"references/","page":"Suggested Readings & References","title":"Suggested Readings & References","text":"Novotny, L. and Hecht, B. (2006). Principles of Nano-Optics (Cambridge University Press).\n\n\n\n","category":"page"},{"location":"#AngularSpectra.jl","page":"AngularSpectra.jl","title":"AngularSpectra.jl","text":"","category":"section"},{"location":"","page":"AngularSpectra.jl","title":"AngularSpectra.jl","text":"DocTestSetup = quote\n    using AngularSpectra\nend","category":"page"},{"location":"","page":"AngularSpectra.jl","title":"AngularSpectra.jl","text":"A Julia package based in the scalar and vectorial angular spectrum method, a numerical approach to simulating waves in optics, acoustics, quantum mechanics, and gravitational physics.","category":"page"},{"location":"#Installation","page":"AngularSpectra.jl","title":"Installation","text":"","category":"section"},{"location":"","page":"AngularSpectra.jl","title":"AngularSpectra.jl","text":"To install AngularSpectra.jl, start Julia and run the following command:","category":"page"},{"location":"","page":"AngularSpectra.jl","title":"AngularSpectra.jl","text":"using Pkg; Pkg.add(\"https://github.com/apkille/AngularSpectra.jl\")","category":"page"},{"location":"#The-Angular-Spectrum-Method","page":"AngularSpectra.jl","title":"The Angular Spectrum Method","text":"","category":"section"},{"location":"","page":"AngularSpectra.jl","title":"AngularSpectra.jl","text":"Any monochromatic vector wave field mathbfF in a homogeneous medium at position mathbfr can be written as a continuous distribution of plane waves, that is,","category":"page"},{"location":"","page":"AngularSpectra.jl","title":"AngularSpectra.jl","text":"mathbfF(mathbfr) = int mathbfA(mathbfk) e^imathbfkcdot mathbfr dOmega_mathbfk","category":"page"},{"location":"","page":"AngularSpectra.jl","title":"AngularSpectra.jl","text":"where mathbfA is the angular spectrum of the field that is dependent on the wave vector mathbfk, and Omega_mathbfk is the solid-angle accessed by all possible plane wave orientations in mathbfk-space. In other words, upon knowing how an arbitrary wave field can be decomposed into a linear combination of plane waves in momentum space, one can effectively compute the field at any point in real space with an inverse Fourier transform. This is a powerful formalism known as the angular spectrum method.","category":"page"},{"location":"","page":"AngularSpectra.jl","title":"AngularSpectra.jl","text":"info: Scalar Angular Spectrum Method\nThe above formalism applies to scalar wave fields as well. Simply put, one can replace the vector wave field with a scalar wave field, and likewise for the corresponding angular spectrum.","category":"page"},{"location":"","page":"AngularSpectra.jl","title":"AngularSpectra.jl","text":"AngularSpectra.jl is an interface for computing the angular spectrum mathbfA(mathbfk) of a wave field, hence providing a straightforward means of simulating various wave phenomena. ","category":"page"},{"location":"","page":"AngularSpectra.jl","title":"AngularSpectra.jl","text":"The angular spectrum of a field can be calculated as follows. Let's say we know the vector field mathbfF in the z = 0 plane. Computing the Fourier transform of mathbfF in this object plane gives the angular spectrum:","category":"page"},{"location":"","page":"AngularSpectra.jl","title":"AngularSpectra.jl","text":"mathbfF(mathbfk_perp) Biggl_z=0 = frac14pi^2 iint_-infty^+infty mathbfA(mathbfr_perp 0) e^imathbfk_perp cdot mathbfr_perp dmathbfr_perp","category":"page"},{"location":"","page":"AngularSpectra.jl","title":"AngularSpectra.jl","text":"where mathbfr_perp = (xy) and mathbfk_perp = (k_x k_y) are the transverse components of mathbfr and mathbfk in the plane, respectively.","category":"page"},{"location":"API/#Full-API","page":"API","title":"Full API","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"<style>\n    .content table td {\n        padding-top: 0 !important;\n        padding-bottom: 0 !important;\n    }\n</style>","category":"page"},{"location":"API/#Autogenerated-API-list","page":"API","title":"Autogenerated API list","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"Modules = [AngularSpectra]\nPrivate = false","category":"page"},{"location":"API/#AngularSpectra.AngularSpectrum","page":"API","title":"AngularSpectra.AngularSpectrum","text":"AngularSpectrum(incfield, basis, dist)\n\nAngular spectrum of wave field.\n\n\n\n\n\n","category":"type"}]
}
